---
- name: Playbook Deploy OLT NK
  hosts: NE
  gather_facts: false
  connection: telnet
  debugger: never
  vars:
    
    command_system: |
      [
        "configure system port-num-in-proto type-based",
        "configure system security profile admin slot-numbering type-based",
        "configure system max-lt-link-speed link-speed forty-gb",
        "configure equipment protection-group 1 admin-status unlock",
        "configure system security filetransfer protocol sftp"
      ]

    commands_profiles: | 
            [ 
              "configure qos profiles ingress-qos HSIv2 dot1-p0-tc 0 dot1-p1-tc 0 dot1-p2-tc 2 dot1-p3-tc 0 dot1-p4-tc 2 dot1-p5-tc 2 dot1-p6-tc 2 dot1-p7-tc 2"
            ]

    commands_vlan_30: |
            [ 
              'configure system loop-id-syntax efm-based-pon "Access_Node_ID xpon Frame/ShSlt/Subslot/ShPrt:Q-VID.ONU.NzOnuSN"',
              "configure vlan id 30 mode residential-bridge",
              "configure vlan id 30 circuit-id-pppoe physical-id",
              "configure vlan id 30 mode residential-bridge name HSI-VOD pppoe-relay-tag configurable in-qos-prof-name name:HSIv2",
              "configure service vpls 30 customer 1 v-vpls vlan 30",
              "configure service vpls 30 description HSI-VOD",
              "configure service vpls 30 sap lag-20:30",
              "configure service vpls 30 no shutdown"
            ]

    commands_vlan_29: | 
            [ 
              "configure vlan id 29 mode residential-bridge name TOIP in-qos-prof-name name:Default_TC5 new-secure-fwd enable",
              "configure vlan id 29 dhcp-opt-82 circuit-id-dhcp physical-id",
              "configure vlan id 29 aging-time 3600",
              "configure service vpls 29 v-vpls vlan 29 customer 1 create",
              "configure service vpls 29 description TOIP",
              "configure service vpls 29 no shutdown",
              "configure service vpls 29 sap lag-20:29 create",
              "configure service vprn 10029 customer 1 create",
              "configure service vprn 10029 description TOIP-Itf",
              "configure service vprn 10029 route-distinguisher 1.1.1.3:10",
              "configure service vprn 10029 interface TOIP-Itf create",
              "configure service vprn 10029 interface TOIP-Itf address {{ipToipOlt}}{{maskToipCidr}}",
              "configure service vprn 10029 interface TOIP-Itf sap nt:vp:1:29",
              "configure service vprn 10029 interface TOIP-Itf no shutdown",
              "configure service vprn 10029 no shutdown"
            ]

    commands_vlan_7: | 
            [ 
              "configure vlan id 7 mode residential-bridge name DHCP-IPTV in-qos-prof-name name:Default_TC2 new-secure-fwd enable"
            ]

    commands_snmp: | 
            [ 
              "configure system security snmp community ISAM-IHUB host-address 172.18.4.0/24 context ihub",
              "configure system security snmp community ISAM-CORE host-address 172.18.4.0/24",
              "configure system security snmp community ISAM-IHUB host-address 10.172.0.16/32 context ihub",
              "configure system security snmp community ISAM-CORE host-address 10.172.0.16/32",
              "configure system security snmp community ISAM-IHUB host-address 190.227.215.18/32 context ihub",
              "configure system security snmp community ISAM-CORE host-address 190.227.215.18/32",
              "configure system security snmp community ISAM-IHUB host-address 190.227.215.10/32 context ihub",
              "configure system security snmp community ISAM-CORE host-address 190.227.215.10/32",
              "configure system security snmp community ISAM-IHUB host-address 172.18.4.15/32 context ihub"
            ]

    commands_set_vlan: |
            [
              "configure service vpls 29 sap {{item.placas}}:29 create",
              "configure service vpls 30 sap {{item.placas}}:30"
            ]

    commands_tacacs_1: | 
            [ 
              'configure system security tacacs authen-server TACACS1 router-instance base ip-address 200.43.9.251 secret plain:argentina2001',
              'configure system security tacacs author-server TACACS1 router-instance base ip-address 200.43.9.251 secret plain:argentina2001',
              'configure system security tacacs acc-server TACACS1 router-instance base ip-address 200.43.9.251 secret plain:argentina2001'
            ] 
    commands_tacacs_2: | 
            [ 
              'configure system security tacacs authen-server TACACS2 router-instance base ip-address 200.43.9.15 secret plain:argentina2001',
              'configure system security tacacs author-server TACACS2 router-instance base ip-address 200.43.9.15 secret plain:argentina2001',
              'configure system security tacacs acc-server TACACS2 router-instance base ip-address 200.43.9.15 secret plain:argentina2001'
            ] 
    commands_tacacs_policy: | 
            [ 
              "configure system security tacacs policy TACACS_POL1",
              "configure system security tacacs policy TACACS_POL1 servers 1 priority 1 authen-server name:TACACS1 author-server name:TACACS1 acc-server name:TACACS1",
              "configure system security tacacs policy TACACS_POL1 servers 2 priority 2 authen-server name:TACACS2 author-server name:TACACS2 acc-server name:TACACS2"
            ] 
    commands_tacacs_apply_1: | 
            [ 
              "configure system security tacacs operator-policy name:TACACS_POL1",
            ] 
    commands_tacacs_apply_2: | 
            [ 
              "configure system security oper-policy-prio ttt"
            ] 
            
    commands_users_profile: |
            [
              "configure system security profile automation",
              "configure system security profile automation slot-numbering type-based",
              'configure system security profile automation description "default administrator group"',
              "configure system security profile automation aaa write",
              "configure system security profile automation atm write",
              "configure system security profile automation alarm write",
              "configure system security profile automation dhcp write",
              "configure system security profile automation equipment write",
              "configure system security profile automation igmp write",
              "configure system security profile automation ip write",
              "configure system security profile automation pppoe write",
              "configure system security profile automation qos write",
              "configure system security profile automation software-mngt write",
              "configure system security profile automation transport write",
              "configure system security profile automation vlan write",
              "configure system security profile automation xdsl write",
              "configure system security profile automation sip write",
              "configure system security profile automation megaco write",
              "configure system security profile automation lacp write",
              "configure system security profile automation mstp write",
              "configure system security profile automation security write",
              "configure system security profile automation service write",
              "configure system security profile automation debug write",
              "configure system security profile automation debug-mirror write",
              "configure system security profile automation filter write",
              "configure system security profile automation link write",
              "configure system security profile automation log write",
              "configure system security profile automation oam write",
              "configure system security profile automation drouter write"
            ]

    # Pasar Hostname a var
    commands_users: | 
            [ 
              'configure system security operator userauto profile automation password plain:m@tdaem0n',
              'configure system security operator userauto prompt "{{inventory_hostname}}:%s:%n%d%c"',
              'configure system security operator userauto description "User for scripting"'
            ]
            
  tasks:
      # - include_vars: '../vars/content_vars.yaml'
 
      - name: -- buscar placas --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.+(#|$)" 
          cmdtimeout: 60
          command:
            - show equipment slot
        register: show_slots

      - name: -- Armo el Inventario slot --
        set_fact:
          inventario_slot: "{{ show_slots['command'][0]['show equipment slot'] | parse_cli_textfsm('./fsm/nk/slot_parser_nk.fsm')}}"
        delegate_to: localhost 
  
      - debug: 
          msg: "{{ inventario_slot }}"
        delegate_to : localhost
      
      - name: -- activar placas --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.+(#|$)"
          cmdtimeout: 60
          command:
            - configure equipment slot {{item.slot}} planned-type {{item.modelo}} unlock
        register: reset_onts
        when: item.status == "no" and (item.modelo != "empty" or item.modelo != "unknown")
        loop: "{{inventario_slot}}"
        ignore_errors: yes    

      - name: -- Esperando activaci√≥n de placas --
        pause:
          seconds: 180 
  
      ############ activamos puertos#####################
  
      - name: -- buscar puertos --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.+(#|$)" 
          cmdtimeout: 60
          command:
            - show interface port
        register: show_port
  
      - name: -- Armo el Inventario slot --
        set_fact:
          inventario_port: "{{ show_port['command'][0]['show interface port'] | parse_cli_textfsm('./fsm/nk/port_parser_nk.fsm')}}"
        delegate_to: localhost 
  
      - debug: 
          msg: "{{ inventario_port }}"
        delegate_to : localhost
      
      - name: -- activar puerto --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.+(#|$)"
          cmdtimeout: 60
          command:
            - configure pon interface {{item.port}} admin-state up
        register: reset_onts
        when: item.status == "down"
        loop: "{{inventario_port}}"
      
      - name: -- Config DATA - config_system --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{command_system}}"
        register: config_system
        ignore_errors: yes
    
      
    
      - name: -- Config DATA - config_profiles --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_profiles}}"
        register: config_profiles
        ignore_errors: yes
    
      - name: -- Config DATA - config_vlan_30 --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_vlan_30}}"
        register: config_vlan_30
        ignore_errors: yes
    
      - name: -- Config DATA - commands_vlan_29 --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_vlan_29}}"
        register: config_vlan_29
        ignore_errors: yes
       
      - name: -- Config DATA - commands_vlan_7 --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_vlan_7}}"
        register: config_vlan_7
        ignore_errors: yes
    
    
      - name: -- Status Placas --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command:
            - show equipment slot
        register: result
        
      - name: -- Parsed Placas --
        set_fact:
          placas: "{{ result.command[0]['show equipment slot'] | parse_cli_textfsm('./fsm/nk/placas_nk.fsm')}}"
        delegate_to: localhost
    
      - name: -- Config DATA - config_set_vlan --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_set_vlan}}"
        register: config_set_vlan
        loop: "{{placas}}"
        ignore_errors: yes
    
      - name: -- Config DATA - config_snmp --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_snmp}}"
        register: config_snmp
        ignore_errors: yes
    
      - name: -- Config DATA - config_tacacs_1 --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_tacacs_1}}"
        register: config_tacacs_1
        ignore_errors: yes
      - name: -- Config DATA - config_tacacs_2 --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_tacacs_2}}"
        register: config_tacacs_2
        ignore_errors: yes
      - name: -- Config DATA - config_commands_tacacs_policy --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_tacacs_policy}}"
        register: config_tacacs_3
        ignore_errors: yes
      - name: -- Config DATA - config_commands_tacacs_apply_1 --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_tacacs_apply_1}}"
        register: config_tacacs_4
        retries: 3 # <- REINTENTAMOS CONEXION 3 VECES
        delay: 5 # <- DELAY DE 5 SEGUNDOS POR REINTENTO
        until: config_tacacs_4 is success
        ignore_errors: yes
        
      - name: -- Config DATA - config_commands_tacacs_apply_2 --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_tacacs_apply_2}}"
        register: config_tacacs_5
        retries: 3 # <- REINTENTAMOS CONEXION 3 VECES
        delay: 5 # <- DELAY DE 5 SEGUNDOS POR REINTENTO
        until: config_tacacs_5 is success
        ignore_errors: yes
        
      # - name: --- SET FACT FROM J2 ---
      #   set_fact:
      #     deploy_result: "{{lookup('template','./j2/nk/olt_result_check_nk.j2')}}"
      #   delegate_to: localhost
      #   ignore_errors: yes
    
      # - name: -- Debug deploy Result --
      #   debug: 
      #     msg:  "{{deploy_result}}"
      #   delegate_to: localhost
      #   ignore_errors: yes
        
      # - name: --- DEPLOY RESULT TO FILE ---
      #   copy:
      #     content: "{{deploy_result}}"
      #     dest: "{{reports_PATH}}/deploy_{{inventory_hostname}}.json"
      #   run_once: true
      #   when: deploy_result is defined
      #   delegate_to: localhost
      #   ignore_errors: yes

      - name: -- Config DATA - config_users_profile --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_users_profile}}"
        register: config_users_profile
        ignore_errors: yes

      - name: -- Config DATA - config_users --
        dslam_alcatel_command:
          prompt: "{{ inventory_hostname }}.*(#|$)" 
          cmdtimeout: 60
          command: "{{commands_users}}"
        register: config_users
        ignore_errors: yes
    
        